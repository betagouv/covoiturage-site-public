---
type Stat = {
  value: string,
  description: string,
}
export interface Props {
  stats: Stat[],
  analyse?: string,
  analyseLeft?: boolean,
}

const { analyseLeft = false, stats, analyse } = Astro.props;
---
<div class="fr-grid-row fr-grid-row--gutters fr-grid-row--center">
  {
  analyse && analyseLeft ? 
    <>
      <div class="fr-col fr-col-md-6">
        <div class="fr-callout analyse">
          <h3 class="fr-callout__title ">Analyse</h3>
          <p class="fr-callout__text">
            {analyse} 
          </p>
        </div>
      </div>
    </>
    : ''
  }
  {
    stats.map((stat) =>(
      <>
        <div class="fr-col fr-col-md-3">
          <div class="fr-callout stat">
            <h2 class="fr-callout__title">{stat.value}</h2>
            <p class="fr-callout__text">
              {stat.description} 
            </p>
          </div>
        </div>
      </>
    ))
  }
  {
    analyse && !analyseLeft ? 
    <>
      <div class="fr-col fr-col-md-6">
        <div class="fr-callout analyse">
          <h3 class="fr-callout__title">Analyse</h3>
          <p class="fr-callout__text">
            {analyse} 
          </p>
        </div>
      </div>
    </>
    : ''
  }  
</div>

<style lang="scss">
  .fr-col{
    display: flex;
  }
  .stat{
    align-items: stretch;
    padding: 2rem 1rem;
    text-align: right;
    .fr-callout__title{
      font-size: 2.5rem;
      padding: 1rem 0;
      
    }
    .fr-callout__text{
      font-size: 1rem;
    }
  }
  .analyse{
    align-items: stretch;
    padding: 1rem;
    .fr-callout__title{
      font-size: 1rem;
    }
    .fr-callout__text{
      font-size: 0.8rem;
    }
  }

</style>

